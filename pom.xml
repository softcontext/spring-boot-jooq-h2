<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>spring-boot-jooq-h2</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-jooq-h2</name>
	<description></description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 
			http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
		 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>h2</id>
			<build>
				<plugins>
					<plugin>
					
						<!-- Specify the maven code generator plugin -->
						<!-- Use org.jooq            for the Open Source Edition
						         org.jooq.pro        for commercial editions, 
						         org.jooq.pro-java-6 for commercial editions with Java 6 support,
						         org.jooq.trial      for the free trial edition 
						       
						     Note: Only the Open Source Edition is hosted on Maven Central. 
						           Import the others manually from your distribution -->
						<groupId>org.jooq</groupId>
						<artifactId>jooq-codegen-maven</artifactId>
						
						<!-- The plugin should hook into the generate goal -->
						<executions>
							<execution>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
						
						<!-- Manage the plugin's dependency. -->
						<dependencies>
							<dependency>
								<groupId>com.h2database</groupId>
								<artifactId>h2</artifactId>
								<version>${h2.version}</version>
							</dependency>
						</dependencies>
						
						<!-- Specify the plugin configuration. The configuration format is the same as for the standalone code generator -->
						<configuration>
						
							<!-- JDBC connection parameters -->
							<jdbc>
								<driver>org.h2.Driver</driver>
								<url>jdbc:h2:file:./h2db/springbootjooq;FILE_LOCK=NO</url>
								<!-- <url>jdbc:h2:mem:springbootjooq;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</url> -->
								<username>sa</username>
								<password></password>
							</jdbc>
							
							<!-- Generator parameters -->
							<generator>
								<name>org.jooq.util.DefaultGenerator</name>
								<database>
									<name>org.jooq.util.h2.H2Database</name>
									<includes>.*</includes>
									<excludes />
									<inputSchema>PUBLIC</inputSchema>
								</database>
								
								<target>
									<packageName>com.example.demo.jooq.domain</packageName>
									<directory>gensrc/main/java</directory>
								</target>
							</generator>
							
						</configuration>
						
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- mvn spring-boot:run -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- 폴더를 소스 폴더로 등록한다. == Build Path > Use as Source Folder -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>gensrc/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 
			mvn exec:java
			exec:java 골을 실행하면 웹브라어져가 실행되고 DB접속정보를 입력한다.
			 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<mainClass>org.h2.tools.Console</mainClass>
					<arguments>
						<argument>-browser</argument>
					</arguments>
				</configuration>
			</plugin>
			<!-- 
			스프링 레가시 >> 스키마 초기화
			<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
				<jdbc:script location="classpath:db/user.sql"/>
				<jdbc:script location="classpath:db/product.sql"/>
			</jdbc:initialize-database>
			 -->
		</plugins>
	</build>

</project>
